{
  "compiler": {
    "version": "0.8.15+commit.e14f2714"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "caller",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          },
          {
            "internalType": "bytes32",
            "name": "typeId",
            "type": "bytes32"
          },
          {
            "internalType": "bytes",
            "name": "data",
            "type": "bytes"
          }
        ],
        "name": "universalReceiverDelegate",
        "outputs": [
          {
            "internalType": "bytes",
            "name": "result",
            "type": "bytes"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "devdoc": {
      "details": "LSP1UniversalReceiverDelegate allows for an external universal receiver smart contract, that is the delegate of the initial universal receiver",
      "kind": "dev",
      "methods": {
        "universalReceiverDelegate(address,uint256,bytes32,bytes)": {
          "details": "Get called by the universalReceiver function, can be customized to have a specific logic",
          "params": {
            "caller": "The address calling the universalReceiver function",
            "data": "The arbitrary data received with the call",
            "typeId": "The hash of a specific standard or a hook",
            "value": "The amount sent to the universalReceiver function"
          },
          "returns": {
            "result": "Any useful data could be returned"
          }
        }
      },
      "title": "The interface for LSP1UniversalReceiverDelegate",
      "version": 1
    },
    "userdoc": {
      "kind": "user",
      "methods": {},
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "packages/foundry-ts/lib/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiverDelegate.sol": "ILSP1UniversalReceiverDelegate"
    },
    "evmVersion": "london",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [
      ":@erc725/smart-contracts/contracts/=packages/foundry-ts/lib/ERC725/implementations/contracts/",
      ":@lukso/lsp-smart-contracts/=packages/foundry-ts/lib/lsp-smart-contracts/",
      ":@openzeppelin/=packages/foundry-ts/lib/openzeppelin-contracts/",
      ":ERC725/=packages/foundry-ts/lib/ERC725/",
      ":ds-test/=packages/foundry-ts/lib/solmate/lib/ds-test/src/",
      ":forge-std/=packages/foundry-ts/lib/forge-std/src/",
      ":lsp-smart-contracts/=packages/foundry-ts/lib/lsp-smart-contracts/contracts/",
      ":openzeppelin-contracts/=packages/foundry-ts/lib/openzeppelin-contracts/",
      ":solidity-bytes-utils/=packages/foundry-ts/lib/solidity-bytes-utils/contracts/",
      ":solidity-bytes-utils/contracts/=packages/foundry-ts/lib/solidity-bytes-utils/contracts/",
      ":solmate/=packages/foundry-ts/lib/solmate/src/"
    ]
  },
  "sources": {
    "packages/foundry-ts/lib/lsp-smart-contracts/contracts/LSP1UniversalReceiver/ILSP1UniversalReceiverDelegate.sol": {
      "keccak256": "0x91cfa8fec33a3d7f4141c1188fd3d2bd167db9e8420e9b9ed07c3e1f7b8a239b",
      "license": "CC0-1.0",
      "urls": [
        "bzz-raw://fd707b91f940a35052503056548ec30ab141cc16d73bd8355c6cb608f203d991",
        "dweb:/ipfs/QmXPUNVJLYMBYW4SzMzpG7MoLzAYupQK9R5yqQQ9gtzC9B"
      ]
    }
  },
  "version": 1
}